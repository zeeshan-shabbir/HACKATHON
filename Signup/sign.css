@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:wght@700&family=Poppins:wght@400;500;600&display=swap');

body{
  margin: 0;
  padding: 0;
  /* background: linear-gradient(120deg,#2980b9, #8e44ad); */
  background: linear-gradient(120deg,#ffffff, #000000);
  height: 100vh;
  text-transform: capitalize;
  /* overflow-x: hidden !important; */
}
.container{
    overflow: hidden !important;
   
    width: 400px;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.homebtn{
  display: inline-block;
  padding-top: 1.2rem;
  padding-left: 2rem;
  text-decoration: none;
  color: black;
}
.rbtn{
  position: absolute;
  right: 1rem;
  top: 1rem;
}
.sbtn{
  position: absolute;
  left: 1rem;
  top: 1rem;
}
.center{
  /* position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); */
  overflow-y: scroll;
  height: 510px;
  width: 400px;
  background: white;
  border-radius: 10px;
  box-shadow: 10px 10px 15px rgba(0,0,0,0.05);
}
.center h1{
  text-align: center;
  padding: 20px 0;
  margin: 0;
  border-bottom: 1px solid silver;
}
.center form{
  padding: 0 40px;
  box-sizing: border-box;
}
form .txt_field{
  position: relative;
  border-bottom: 2px solid #adadad;
  margin: 30px 0;
}
.txt_field input{
  width: 100%;
  padding: 0 5px;
  height: 40px;
  font-size: 16px;
  border: none;
  background: none;
  outline: none;
}
.txt_field label{
  position: absolute;
  top: 50%;
  left: 5px;
  color: #adadad;
  transform: translateY(-50%);
  font-size: 16px;
  pointer-events: none;
  transition: .5s;
}
.txt_field span::before{
  content: '';
  position: absolute;
  top: 40px;
  left: 0;
  width: 0%;
  height: 2px;
  background: #2691d9;
  transition: .5s;
}
.txt_field input:focus ~ label,
.txt_field input:valid ~ label{
  top: -5px;
  color: #2691d9;
}
.txt_field input:focus ~ span::before,
.txt_field input:valid ~ span::before{
  width: 100%;
}
.pass{
  margin: -5px 0 20px 5px;
  color: #a6a6a6;
  cursor: pointer;
}
.pass:hover{
  text-decoration: underline;
  color: black;
  font-weight: bold;
}
input[type="submit"],.regbtn{
text-transform: capitalize;
  width: 100%;
  height: 50px;
  border: 1px solid;
  background: #2691d9;
  border-radius: 15px;
  font-size: 18px;
  color: #e9f4fb;
  font-weight: 700;
  cursor: pointer;
  outline: none;

}
input[type="submit"]:hover,.regbtn:hover{
  border-color: #2691d9;
  transition: .5s;
  color: black;
}
.loginbtn{
  display: flex;
  align-items: center;
  justify-content: center;
}
#loader {
  display: none;
  position:absolute;
  border: 10px solid #f3f3f3; /* Light grey */
  border-top: 10px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 2rem;
  height: 2rem;
  animation: spin 2s linear infinite;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.signup_link{
  margin: 30px 0;
  text-align: center;
  font-size: 16px;
  color: #666666;
}
.signup_link a{
  color: #2691d9;
  text-decoration: none;
}
.signup_link a:hover{
  text-decoration: underline;
}
.signup{
  position: absolute;
  top: 0%;
  left: 100%;
}
.regWrapper{
  position: absolute;
  top: 0%;
  right: 100%;
}
.signup_link span{
  cursor: pointer;

}
.signup_link span:hover{
  text-decoration: underline;
  color: black;
  font-weight: bold;

}
.Sup_h1{
  margin: 10px ;
  text-align: center;
  text-transform: capitalize;
}
.signupPage{
    transform: translate(-100%,0%);
    transition: all .5s ease-in;
}
.closesignupPage{
    transform: translate(0%,0%);
    transition: all .5s ease-in;
}
.reg {
    transform: translate(100%,0%);
    transition: all .5s ease-in;
}
.socail{
  display: flex;
  align-items: center;
  justify-content: space-evenly;
}
.socail button {
  border: none;
  padding: 0px 20px;
  cursor: pointer;
}
.socail button img{
  cursor: pointer;
  width: 50px;
  height: 50px;
}
#error,#Serror,#Rerror{
  display: none;
  color: red;
  font-family: "Poppins", sans-serif;
  text-align: justify;
  margin: 10px 0px;

}
/* // let allData=[]
// const allDatafnc = async() => {
//     let Admins = await AdminData();
//     let Users = await UserData();
//     allData = [
//         ...Admins,
//         ...Users
//     ]
//     console.log(allData);
// } */
